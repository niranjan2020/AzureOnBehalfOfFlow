{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OnBehalfOfFlow\\\\AzureOnBehalfOfFlow\\\\OnBehalfOfFlow\\\\SPA\\\\src\\\\components\\\\NavigationBar.jsx\",\n    _s = $RefreshSig$();\n\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/esm/Dropdown\";\nimport { loginRequest } from \"../authConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NavigationBar = () => {\n  _s();\n\n  const {\n    instance\n  } = useMsal();\n  /**\r\n   * Most applications will need to conditionally render certain components based on whether a user is signed in or not. \r\n   * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will \r\n   * only render their children if a user is authenticated or unauthenticated, respectively.\r\n   */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"/\",\n        children: \"Microsoft identity platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AuthenticatedTemplate, {\n        children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Button,\n          href: \"/profile\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Button,\n          href: \"/hello\",\n          children: \"HelloAPI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          variant: \"warning\",\n          className: \"ml-auto\",\n          drop: \"left\",\n          title: \"Sign Out\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            as: \"button\",\n            onClick: () => instance.logoutPopup({\n              postLogoutRedirectUri: \"/\",\n              mainWindowRedirectUri: \"/\"\n            }),\n            children: \"Sign out using Popup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            as: \"button\",\n            onClick: () => instance.logoutRedirect({\n              postLogoutRedirectUri: \"/\"\n            }),\n            children: \"Sign out using Redirect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UnauthenticatedTemplate, {\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          variant: \"secondary\",\n          className: \"ml-auto\",\n          drop: \"left\",\n          title: \"Sign In\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            as: \"button\",\n            onClick: () => instance.loginPopup(loginRequest),\n            children: \"Sign in using Popup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            as: \"button\",\n            onClick: () => instance.loginRedirect(loginRequest),\n            children: \"Sign in using Redirect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NavigationBar, \"kNmaupTUyOO55c/HFAYpHUXUX7Y=\", false, function () {\n  return [useMsal];\n});\n\n_c = NavigationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"sources":["C:/Users/OnBehalfOfFlow/AzureOnBehalfOfFlow/OnBehalfOfFlow/SPA/src/components/NavigationBar.jsx"],"names":["AuthenticatedTemplate","UnauthenticatedTemplate","useMsal","Nav","Navbar","Button","DropdownButton","Dropdown","loginRequest","NavigationBar","instance","logoutPopup","postLogoutRedirectUri","mainWindowRedirectUri","logoutRedirect","loginPopup","loginRedirect"],"mappings":";;;AAAA,SAASA,qBAAT,EAAgCC,uBAAhC,EAAyDC,OAAzD,QAAwE,mBAAxE;AAEA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,SAASC,YAAT,QAA6B,eAA7B;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE/B,QAAM;AAAEC,IAAAA;AAAF,MAAeR,OAAO,EAA5B;AAEA;AACJ;AACA;AACA;AACA;;AACI,sBACI;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAC,MAA7B;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,cAAb;AAA4B,QAAA,IAAI,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,qBAAD;AAAA,gCACI,QAAC,GAAD,CAAK,IAAL;AAAU,UAAA,EAAE,EAAEG,MAAd;AAAsB,UAAA,IAAI,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD,CAAK,IAAL;AAAU,UAAA,EAAE,EAAEA,MAAd;AAAsB,UAAA,IAAI,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,cAAD;AAAgB,UAAA,OAAO,EAAC,SAAxB;AAAkC,UAAA,SAAS,EAAC,SAA5C;AAAsD,UAAA,IAAI,EAAC,MAA3D;AAAkE,UAAA,KAAK,EAAC,UAAxE;AAAA,kCACI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,EAAE,EAAC,QAAlB;AAA2B,YAAA,OAAO,EAAE,MAAMK,QAAQ,CAACC,WAAT,CAAqB;AAAEC,cAAAA,qBAAqB,EAAE,GAAzB;AAA8BC,cAAAA,qBAAqB,EAAE;AAArD,aAArB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,EAAE,EAAC,QAAlB;AAA2B,YAAA,OAAO,EAAE,MAAMH,QAAQ,CAACI,cAAT,CAAwB;AAAEF,cAAAA,qBAAqB,EAAE;AAAzB,aAAxB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUI,QAAC,uBAAD;AAAA,+BACI,QAAC,cAAD;AAAgB,UAAA,OAAO,EAAC,WAAxB;AAAoC,UAAA,SAAS,EAAC,SAA9C;AAAwD,UAAA,IAAI,EAAC,MAA7D;AAAoE,UAAA,KAAK,EAAC,SAA1E;AAAA,kCACI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,EAAE,EAAC,QAAlB;AAA2B,YAAA,OAAO,EAAE,MAAMF,QAAQ,CAACK,UAAT,CAAoBP,YAApB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,EAAE,EAAC,QAAlB;AAA2B,YAAA,OAAO,EAAE,MAAME,QAAQ,CAACM,aAAT,CAAuBR,YAAvB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAqBH,CA9BM;;GAAMC,a;UAEYP,O;;;KAFZO,a","sourcesContent":["import { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\r\n\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/esm/Dropdown\";\r\n\r\nimport { loginRequest } from \"../authConfig\";\r\n\r\nexport const NavigationBar = () => {\r\n\r\n    const { instance } = useMsal();\r\n\r\n    /**\r\n     * Most applications will need to conditionally render certain components based on whether a user is signed in or not. \r\n     * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will \r\n     * only render their children if a user is authenticated or unauthenticated, respectively.\r\n     */\r\n    return (\r\n        <>\r\n            <Navbar bg=\"primary\" variant=\"dark\">\r\n                <a className=\"navbar-brand\" href=\"/\">Microsoft identity platform</a>\r\n                <AuthenticatedTemplate>\r\n                    <Nav.Link as={Button} href=\"/profile\">Profile</Nav.Link>\r\n                    <Nav.Link as={Button} href=\"/hello\">HelloAPI</Nav.Link>\r\n                    <DropdownButton variant=\"warning\" className=\"ml-auto\" drop=\"left\" title=\"Sign Out\">\r\n                        <Dropdown.Item as=\"button\" onClick={() => instance.logoutPopup({ postLogoutRedirectUri: \"/\", mainWindowRedirectUri: \"/\" })}>Sign out using Popup</Dropdown.Item>\r\n                        <Dropdown.Item as=\"button\" onClick={() => instance.logoutRedirect({ postLogoutRedirectUri: \"/\" })}>Sign out using Redirect</Dropdown.Item>\r\n                    </DropdownButton>\r\n                </AuthenticatedTemplate>\r\n                <UnauthenticatedTemplate>\r\n                    <DropdownButton variant=\"secondary\" className=\"ml-auto\" drop=\"left\" title=\"Sign In\">\r\n                        <Dropdown.Item as=\"button\" onClick={() => instance.loginPopup(loginRequest)}>Sign in using Popup</Dropdown.Item>\r\n                        <Dropdown.Item as=\"button\" onClick={() => instance.loginRedirect(loginRequest)}>Sign in using Redirect</Dropdown.Item>\r\n                    </DropdownButton>\r\n                </UnauthenticatedTemplate>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}