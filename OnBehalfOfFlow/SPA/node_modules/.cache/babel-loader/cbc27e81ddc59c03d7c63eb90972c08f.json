{"ast":null,"code":"/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nimport { LogLevel } from \"@azure/msal-browser\";\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n */\n\nexport const msalConfig = {\n  auth: {\n    clientId: \"adddf072-0f8c-408a-8aaa-8ace5a521a3f\",\n    // This is the ONLY mandatory field that you need to supply.\n    authority: \"https://login.microsoftonline.com/c5ffa990-0e0a-4bf6-9c04-79ab98e05931\",\n    // Defaults to \"https://login.microsoftonline.com/common\"\n    redirectUri: \"/\",\n    // You must register this URI on Azure Portal/App Registration. Defaults to window.location.origin\n    postLogoutRedirectUri: \"/\",\n    // Indicates the page to navigate after logout.\n    navigateToLoginRequestUrl: false // If \"true\", will navigate back to the original request location before processing the auth code response.\n\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    // Configures cache location. \"sessionStorage\" is more secure, but \"localStorage\" gives you SSO between tabs.\n    storeAuthStateInCookie: false // Set this to \"true\" if you are having issues on IE11 or Edge\n\n  },\n  system: {\n    loggerOptions: {\n      loggerCallback: (level, message, containsPii) => {\n        if (containsPii) {\n          return;\n        }\n\n        switch (level) {\n          case LogLevel.Error:\n            console.error(message);\n            return;\n\n          case LogLevel.Info:\n            console.info(message);\n            return;\n\n          case LogLevel.Verbose:\n            console.debug(message);\n            return;\n\n          case LogLevel.Warning:\n            console.warn(message);\n            return;\n        }\n      }\n    }\n  }\n};\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\n\nexport const loginRequest = {\n  scopes: []\n};\n/**\r\n * Add here the endpoints and scopes when obtaining an access token for protected web APIs. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\n\nexport const protectedResources = {\n  graphMe: {\n    endpoint: \"https://graph.microsoft.com/v1.0/me\",\n    scopes: [\"User.Read\"]\n  },\n  apiHello: {\n    endpoint: \"https://localhost:5001/weatherforecast\",\n    scopes: [\"api://43da8b3c-8743-4d6e-84b4-00fe04d93222/access_as_user\"] // e.g. api://xxxxxx/access_as_user\n\n  }\n};","map":{"version":3,"sources":["C:/Users/OnBehalfOfFlow/AzureOnBehalfOfFlow/OnBehalfOfFlow/SPA/src/authConfig.js"],"names":["LogLevel","msalConfig","auth","clientId","authority","redirectUri","postLogoutRedirectUri","navigateToLoginRequestUrl","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","protectedResources","graphMe","endpoint","apiHello"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,qBAAzB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG;AACtBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,sCADR;AACgD;AAClDC,IAAAA,SAAS,EAAE,wEAFT;AAEmF;AACrFC,IAAAA,WAAW,EAAE,GAHX;AAGgB;AAClBC,IAAAA,qBAAqB,EAAE,GAJrB;AAI0B;AAC5BC,IAAAA,yBAAyB,EAAE,KALzB,CAKgC;;AALhC,GADgB;AAQtBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,aAAa,EAAE,gBADZ;AAC8B;AACjCC,IAAAA,sBAAsB,EAAE,KAFrB,CAE4B;;AAF5B,GARe;AAYtBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,aAAa,EAAE;AACXC,MAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,OAAR,EAAiBC,WAAjB,KAAiC;AAC7C,YAAIA,WAAJ,EAAiB;AACb;AACH;;AACD,gBAAQF,KAAR;AACI,eAAKd,QAAQ,CAACiB,KAAd;AACIC,YAAAA,OAAO,CAACC,KAAR,CAAcJ,OAAd;AACA;;AACJ,eAAKf,QAAQ,CAACoB,IAAd;AACIF,YAAAA,OAAO,CAACG,IAAR,CAAaN,OAAb;AACA;;AACJ,eAAKf,QAAQ,CAACsB,OAAd;AACIJ,YAAAA,OAAO,CAACK,KAAR,CAAcR,OAAd;AACA;;AACJ,eAAKf,QAAQ,CAACwB,OAAd;AACIN,YAAAA,OAAO,CAACO,IAAR,CAAaV,OAAb;AACA;AAZR;AAcH;AAnBU;AADX;AAZc,CAAnB;AAqCP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMW,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE;AADgB,CAArB;AAIP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAG;AAC9BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,qCADL;AAELH,IAAAA,MAAM,EAAE,CAAC,WAAD;AAFH,GADqB;AAK9BI,EAAAA,QAAQ,EAAE;AACND,IAAAA,QAAQ,EAAE,wCADJ;AAENH,IAAAA,MAAM,EAAE,CAAC,2DAAD,CAFF,CAEiE;;AAFjE;AALoB,CAA3B","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { LogLevel } from \"@azure/msal-browser\";\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n */\r\nexport const msalConfig = {\r\n    auth: {\r\n        clientId: \"adddf072-0f8c-408a-8aaa-8ace5a521a3f\", // This is the ONLY mandatory field that you need to supply.\r\n        authority: \"https://login.microsoftonline.com/c5ffa990-0e0a-4bf6-9c04-79ab98e05931\", // Defaults to \"https://login.microsoftonline.com/common\"\r\n        redirectUri: \"/\", // You must register this URI on Azure Portal/App Registration. Defaults to window.location.origin\r\n        postLogoutRedirectUri: \"/\", // Indicates the page to navigate after logout.\r\n        navigateToLoginRequestUrl: false, // If \"true\", will navigate back to the original request location before processing the auth code response.\r\n    },\r\n    cache: {\r\n        cacheLocation: \"sessionStorage\", // Configures cache location. \"sessionStorage\" is more secure, but \"localStorage\" gives you SSO between tabs.\r\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    },\r\n    system: {\r\n        loggerOptions: {\r\n            loggerCallback: (level, message, containsPii) => {\r\n                if (containsPii) {\r\n                    return;\r\n                }\r\n                switch (level) {\r\n                    case LogLevel.Error:\r\n                        console.error(message);\r\n                        return;\r\n                    case LogLevel.Info:\r\n                        console.info(message);\r\n                        return;\r\n                    case LogLevel.Verbose:\r\n                        console.debug(message);\r\n                        return;\r\n                    case LogLevel.Warning:\r\n                        console.warn(message);\r\n                        return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n    scopes: []\r\n};\r\n\r\n/**\r\n * Add here the endpoints and scopes when obtaining an access token for protected web APIs. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\r\nexport const protectedResources = {\r\n    graphMe: {\r\n        endpoint: \"https://graph.microsoft.com/v1.0/me\",\r\n        scopes: [\"User.Read\"],\r\n    },\r\n    apiHello: {\r\n        endpoint: \"https://localhost:5001/weatherforecast\",\r\n        scopes: [\"api://43da8b3c-8743-4d6e-84b4-00fe04d93222/access_as_user\"], // e.g. api://xxxxxx/access_as_user\r\n    },\r\n}\r\n"]},"metadata":{},"sourceType":"module"}